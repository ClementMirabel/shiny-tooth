{"version":3,"sources":["jwt-user-login.min.js"],"names":["angular","module","config","$httpProvider","$provide","factory","$q","$location","request","token","localStorage","getItem","headers","authorization","requestError","rejection","reject","response","responseError","status","path","interceptors","push","$http","$rootScope","createUser","user","method","url","data","then","res","setItem","getUsers","getUser","Promise","resolve","deleteUser","login","updatePassword","sendRecoverPassword","email","logout","removeItem","updateUser","directive","$routeParams","clusterauth","link","$scope","$attrs","$filter","showLogin","newUser","resetUser","errorMsg","catch","e","recoverPassword","alert","resetPassword","password0","password1","password","console","error","log","switchForm","restrict","templateUrl","run","$templateCache","put"],"mappings":"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","file":"jwt-user-login.min.js","sourcesContent":["angular.module('jwt-user-login', []);\nangular.module('jwt-user-login')\n.config(['$httpProvider', '$provide', function ($httpProvider, $provide) {\n  // register the interceptor as a service\n  $provide.factory('jwtInterceptor', ['$q', '$location', function($q, $location) {\n    return {\n      // optional method\n      'request': function(config) {\n        // do something on success\n        var token = localStorage.getItem('clusterpost_token');\n        if(token){\n          config.headers.authorization = \"Bearer \" + token;\n        }\n        \n        return config;\n      },\n\n      // optional method\n     'requestError': function(rejection) {\n        // do something on error\n        // if (canRecover(rejection)) {\n        //   return responseOrNewPromise\n        // }\n        return $q.reject(rejection);\n      },\n\n\n\n      // optional method\n      'response': function(response) {\n        // do something on success\n        return response;\n      },\n\n      // optional method\n     'responseError': function(rejection) {\n        \n\n        if(rejection.status === 401 && !localStorage.getItem('clusterpost_token')){\n          $location.path('/');\n        }\n\n        if(rejection.status === 404) {\n          $location.path('/notFound');\n        }\n        \n        \n        return $q.reject(rejection);\n      }\n    };\n  }]);\n\n  $httpProvider.interceptors.push('jwtInterceptor');\n\n}])\n.factory('clusterauth', ['$q', '$http', '$location', '$rootScope', function ($q, $http, $location, $rootScope) {\n  return {\n    createUser: function(user){\n      return $http({\n        method: 'POST',\n        url: '/auth/user',\n        data: user\n      })\n      .then(function(res){\n        localStorage.setItem('clusterpost_token', res.data.token);\n      });\n    }, \n    getUsers: function(){\n      return $http({\n          method: 'GET',\n          url: '/auth/users'\n        });\n    },\n    getUser: function(){\n      if($rootScope.user){\n        return Promise.resolve($rootScope.user);\n      }else{\n        return $http({\n          method: 'GET',\n          url: '/auth/user'\n        }).then(function(res){\n          $rootScope.user = res.data;\n          return res.data;\n        });\n      }\n    },    \n    deleteUser: function(user){\n      return $http({\n        method: 'DELETE',\n        url: '/auth/user',\n        data: user\n      });\n    },\n    login: function(user){\n      return $http({\n        method: 'POST',\n        url: '/auth/login',\n        data: user\n      })\n      .then(function(res){\n        localStorage.setItem('clusterpost_token', res.data.token);\n      });\n    },\n    updatePassword: function(user, token){\n      return $http({\n        method: 'PUT',\n        url: '/auth/login',\n        data: user,\n        headers: {\n          authorization: \"Bearer \" + token\n        }\n      })\n      .then(function(res){\n        localStorage.setItem('clusterpost_token', res.data.token);\n      });\n    },\n    sendRecoverPassword: function(email){\n       return $http({\n        method: 'POST',\n        url: '/auth/reset',\n        data: email\n      });\n    },\n    logout: function(){\n      localStorage.removeItem('clusterpost_token');\n      $location.path('/');\n    },\n    updateUser: function(user){\n      return $http({\n        method: 'PUT',\n        url: '/auth/users',\n        data: user\n      });\n    }\n  }\n}])\nangular.module('jwt-user-login')\n.directive('userLogin', ['$routeParams', '$location', '$rootScope', 'clusterauth', function($routeParams, $location, $rootScope, clusterauth){\n\tfunction link($scope,$attrs,$filter){\n\t\n\t$scope.showLogin = true;\n\t$scope.newUser = {};\n\t$scope.user = {};\n\n\t$scope.resetUser = false;\n\n\n\tif($routeParams.token){\n\t\t$scope.showLogin = false;\n\t\t$scope.resetUser = {\n\t\t\ttoken: $routeParams.token\n\t\t}\n\t}\n\t\n\t$scope.createUser = function(){\n\t\t$scope.errorMsg = \"\";\n\t\tclusterauth.createUser($scope.newUser)\n\t\t.then(function(){\n\t\t\treturn clusterauth.getUser();\n\t\t})\n\t\t.then(function(res){\n\t\t\t$rootScope.user = res.data;\n\t\t\t$location.path('/home');\n\t\t})\n\t\t.catch(function(e){\n\t\t\tif(e.status === 409)\n\t\t\t{\n\t\t\t\t$scope.errorMsg = \"An account already exist with this email address. Login with your account or create a new one with a new email address\";\n\t\t\t\t//alert(\"An account already exist with this email address. Recover password or create a new account with a new email address\");\n\t\t\t}\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\t$scope.recoverPassword = function(){\n\t\t$scope.errorMsg = \"\";\n\t\tif(!$scope.user.email)\n\t\t{\n\t\t\talert(\"No email address specified in email field.\");\n\t\t\treturn false;\n\t\t}\n\t\tclusterauth.sendRecoverPassword({\n\t\t\temail: $scope.user.email\n\t\t})\n\t\t.then(function(res){\n\t\t\talert(res.data);\n\t\t})\n\t\t.catch(function(e){\n\t\t\tif(e.status === 401)\n\t\t\t{\n\t\t\t\t$scope.errorMsg = \"I don't know who you are, you need to create an account first!\"\n\t\t\t}\n\t\t})\n\t}\n\n\t$scope.resetPassword = function(){\n\t\t$scope.errorMsg = \"\";\n\t\tif($scope.resetUser.password0 === $scope.resetUser.password1){\n\t\t\tclusterauth.updatePassword({\n\t\t\t\tpassword: $scope.resetUser.password1\n\t\t\t}, $scope.resetUser.token)\n\t\t\t.then(function(){\n\t\t\t\treturn clusterauth.getUser();\n\t\t\t})\n\t\t\t.then(function(res){\n\t\t\t\t$rootScope.user = res.data;\n\t\t\t\t$location.path('/home');\n\t\t\t})\n\t\t\t.catch(function(e){\n\t\t\t\talert('Password must contains 6 characters including at least one uppercase letter and one number - special characte allowed')\n\t\t\t\tconsole.error(e);\n\t\t\t\tthrow e;\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\talert('Passwords are not the same');\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t$scope.login = function(){\n\t\t$scope.errorMsg = \"\";\n\t\tclusterauth.login($scope.user)\n\t\t.then(function(){\n\t\t\treturn clusterauth.getUser();\n\t\t})\n\t\t.then(function(res){\n\t\t\t$rootScope.user = res.data;\n\t\t\t$location.path('/home');\n\t\t})\n\t\t.catch(function(e){\n\t\t\tif(e.status === 401 && $scope.user.password)\n\t\t\t{\n\t\t\t\t$scope.errorMsg = \"Wrong identification - check if email and password are corrects\";\n\t\t\t\t//alert(\"Wrong identification - check if email and password are corrects\");\n\t\t\t}\n\t\t\tconsole.log(e);\n\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\t$scope.switchForm = function(){\n\t\t$scope.errorMsg=\"\";\n\t\t$scope.showLogin=!$scope.showLogin;\n\t}\n};\n\nreturn {\n    restrict : 'E',\n    link : link,\n    templateUrl: './src/jwtUserLogin.template.html'\n}\n\n}]);\n\n\nangular.module('jwt-user-login').run(['$templateCache', function($templateCache) {\n  'use strict';\n\n  $templateCache.put('./src/jwtUserLogin.template.html',\n    \"<div class=\\\"ng-col-12 se-slope\\\" >\\n\" +\n    \"  <div class=\\\"row\\\">\\n\" +\n    \"    <div ng-if=\\\"showLogin && !resetUser\\\" class=\\\"containerLogin\\\">\\n\" +\n    \"      <form class=\\\"form-login\\\">\\n\" +\n    \"        <h2 class=\\\"form-login-heading\\\">Please login</h2>\\n\" +\n    \"        <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\" +\n    \"        <input id=\\\"inputEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" required=\\\"\\\" autofocus=\\\"\\\" type=\\\"email\\\" ng-model=\\\"user.email\\\">\\n\" +\n    \"        <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n\" +\n    \"        <input id=\\\"inputPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required type=\\\"password\\\" ng-model=\\\"user.password\\\" pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\\\" title=\\\"Must contain at least one number and one uppercase and lowercase letter, and at least 6 or more characters\\\">\\n\" +\n    \"\\n\" +\n    \"        <div style=\\\"color:red;\\\"> {{errorMsg}}</div>\\n\" +\n    \"\\n\" +\n    \"        <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" ng-click=\\\"login()\\\">Login</button>\\n\" +\n    \"        <div class=\\\"etc-login-form\\\">\\n\" +\n    \"    \t\t\t<p>forgot your password? <a href=\\\"\\\" ng-click=\\\"recoverPassword()\\\">click here</a></p>\\n\" +\n    \"    \t\t\t<p>new user? <a href=\\\"\\\" ng-click=\\\"switchForm()\\\">create new account</a></p>\\n\" +\n    \"    \t\t</div>\\n\" +\n    \"      </form>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div ng-if=\\\"!showLogin && !resetUser\\\" class=\\\"containerLogin\\\">\\n\" +\n    \"      <form class=\\\"form-login\\\">\\n\" +\n    \"        <h2 class=\\\"form-login-heading\\\">Create an account</h2>\\n\" +\n    \"        <label for=\\\"inputName\\\" class=\\\"sr-only\\\">User Name</label>\\n\" +\n    \"        <input id=\\\"inputName\\\" class=\\\"form-control\\\" placeholder=\\\"User name\\\" required=\\\"\\\" autofocus=\\\"\\\" type=\\\"text\\\" ng-model=\\\"newUser.name\\\">\\n\" +\n    \"        <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\n\" +\n    \"        <input id=\\\"inputEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Email address\\\" required=\\\"\\\" autofocus=\\\"\\\" type=\\\"email\\\" ng-model=\\\"newUser.email\\\">\\n\" +\n    \"        <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\" >Password</label> \\n\" +\n    \"        <input id=\\\"inputPassword\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"\\\" type=\\\"password\\\" ng-model=\\\"newUser.password\\\" pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\\\" title=\\\"Must contain at least one number and one uppercase and lowercase letter, and at least 6 or more characters\\\"> <a href=\\\"\\\" data-toggle=\\\"tooltip\\\" title=\\\"Password must contain at least one number and one uppercase and lowercase letter, and at least 6 or more characters\\\"> Help <i class=\\\"glyphicon glyphicon-info-sign\\\"> </i> </a>\\n\" +\n    \"\\n\" +\n    \"        <div style=\\\"color:red;\\\"> {{errorMsg}}</div>\\n\" +\n    \"\\n\" +\n    \"        <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" ng-click=\\\"createUser()\\\">Create and Login</button>\\n\" +\n    \"        <div class=\\\"etc-login-form\\\">\\n\" +\n    \"          <p>existing user? <a href=\\\"\\\" ng-click=\\\"switchForm()\\\">Login with your account</a></p>\\n\" +\n    \"        </div>\\n\" +\n    \"      </form>\\n\" +\n    \"    </div>\\n\" +\n    \"\\n\" +\n    \"    <div ng-if=\\\"resetUser\\\" class=\\\"containerLogin\\\">\\n\" +\n    \"      <form class=\\\"form-rest-password\\\" >\\n\" +\n    \"        <h2 class=\\\"form-login-heading\\\">Reset your password</h2>\\n\" +\n    \"        <label for=\\\"inputPassword0\\\" class=\\\"sr-only\\\">Password</label>\\n\" +\n    \"        <input id=\\\"inputPassword0\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" required=\\\"\\\" type=\\\"password\\\" ng-model=\\\"resetUser.password0\\\" autocomplete=\\\"off\\\">\\n\" +\n    \"        <label for=\\\"inputPassword1\\\" class=\\\"sr-only\\\">Confirm Password</label>\\n\" +\n    \"        <input id=\\\"inputPassword1\\\" class=\\\"form-control\\\" placeholder=\\\"Confirm assword\\\" required=\\\"\\\" type=\\\"password\\\" ng-model=\\\"resetUser.password1\\\" autocomplete=\\\"off\\\">\\n\" +\n    \"        <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" ng-click=\\\"resetPassword()\\\">Reset and Login</button>\\n\" +\n    \"\\n\" +\n    \"        <p> <a href=\\\"#/welcome\\\">Login page</a> </p>\\n\" +\n    \"      </form>\\n\" +\n    \"    </div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\"\n  );\n\n}]);\n\n//# sourceMappingURL=jwt-user-login.min.js.map"]}
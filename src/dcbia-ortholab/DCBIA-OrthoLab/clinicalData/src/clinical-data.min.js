angular.module("clinical-data",[]),angular.module("cTRIVIAL").controller("clinicalData",["$scope","$http","dcbia","clusterauth",function($scope,$http,dcbia,clusterauth){clusterauth.getUser().then(function(a){$scope.user=a}),$scope.clinicalDataSectionDisplay={},$scope.clinicalDataCollection={showCreate:!1,newCollection:{items:[],type:"clinicalDataCollection",name:""},collections:[],collectionsProperties:{defaultClinicalDataCollection:{class:""}},selectedForm:-1},$scope.defaultClinicalDataCollection={_id:"defaultClinicalDataCollection",name:"All clinical data",type:"clinicalDataCollection",items:0},$scope.clinicalDataCollection.getClinicalDataCollections=function(){return dcbia.getClinicalDataCollections().then(function(a){delete $scope.clinicalDataCollection.selectedCollection,$scope.clinicalDataCollection.collections=a.data,_.each($scope.clinicalDataCollection.collections,function(a){$scope.clinicalDataCollection.collectionsProperties[a._id]={class:""}})}).catch(console.error)},$scope.clinicalDataCollection.create=function(a){dcbia.createClinicalDataCollection(a).then(function(a){$scope.clinicalDataCollection.getClinicalDataCollections()}).catch(console.error)},$scope.clinicalDataCollection.selectCollection=function(a){$scope.clinicalDataCollection.selectedCollection&&($scope.clinicalDataCollection.collectionsProperties[$scope.clinicalDataCollection.selectedCollection._id].class=""),$scope.clinicalDataCollection.selectedCollection=a,$scope.clinicalDataCollection.collectionsProperties[a._id].class="alert alert-info"},$scope.clinicalDataCollection.getDataCollectionKeys=function(a){var b={};return _.each(a,function(a){_.extend(b,a)}),b._id&&delete b._id,b._rev&&delete b._rev,_.keys(b)},$scope.clinicalDataCollection.select=function(a){$scope.clinicalDataCollection.selectCollection(a);var b;return b="defaultClinicalDataCollection"===a._id?dcbia.getAllClinicalData().then(function(a){return $scope.defaultClinicalDataCollection.items=_.map(a.data,function(a){return a.patientId||(a.patientId="null"),{_id:a._id}}),a}):dcbia.getClinicalData(a._id),b.then(function(a){var b=a.data;$scope.clinicalDataCollection.selectedCollectionData=b,$scope.clinicalDataCollection.selectedCollectionDataKeys=$scope.clinicalDataCollection.getDataCollectionKeys(b)}).catch(console.error)},$scope.clinicalDataCollection.delete=function(a){confirm("Are you sure you want to delete the collection?")&&dcbia.deleteClinicalDataCollection(a._id).then(function(a){return $scope.clinicalDataCollection.getClinicalDataCollections()}).catch(console.error)},$scope.clinicalDataCollection.refreshSelectedCollection=function(){$scope.clinicalDataCollection.select($scope.clinicalDataCollection.selectedCollection).then(function(a){return dcbia.getClinicalDataCollection($scope.clinicalDataCollection.selectedCollection._id).then(function(a){$scope.clinicalDataCollection.selectedCollection=a.data,$scope.clinicalDataCollection.collections=_.map($scope.clinicalDataCollection.collections,function(a){return a._id===$scope.clinicalDataCollection.selectedCollection._id?$scope.clinicalDataCollection.selectedCollection:a})})})},$scope.clinicalDataCollection.addClinicalData=function(a){$scope.clinicalDataCollection.selectCollection(a)},$scope.clinicalDataCollection.update=function(a){return dcbia.updateClinicalDataCollection(a).then(function(b){a._rev=b.data.rev})},$scope.clinicalDataCollection.selectForm=function(a){$scope.clinicalDataCollection.selectedForm===-1?$scope.clinicalDataCollection.selectedForm=a:$scope.clinicalDataCollection.selectedForm!==a&&confirm("You will lose the current changes in this form. Do you want to continue?")&&($scope.clinicalDataCollection.selectedForm=a)},$scope.clinicalDataCollection.getClinicalDataCollections(),$scope.clinical={data:{}},$scope.clinical.clearForm=function(a){var b=$scope.clinical.data.formId;a||(a=confirm("Do you want to clear the current changes?")),a&&($scope.clinical.data={},$scope.clinical.data.formId=b,$scope.clinical.data.date=new Date)},$scope.clinical.create=function(){var a=$scope.clinicalDataCollection.selectedCollection;a?$scope.clinical.data&&$scope.clinical.createClinicalData($scope.clinical.data).then(function(b){return a.items.push({_id:b.data.id}),$scope.clinicalDataCollection.update(a)}).catch(console.error):alert("You need to select a collection first!")},$scope.clinical.createClinicalData=function(a){return a.type="clinicalData",dcbia.createClinicalData(a).catch(console.error)},$scope.clinical.deleteAllFiltered=function(a){confirm("Do you want to delete the items beign displayed?")&&Promise.all(_.map(a,function(a){return dcbia.deleteClinicalData(a._id)}))},$scope.clinical.delete=function(a){if(confirm("Do you want to delete the current item?"))return dcbia.deleteClinicalData(a._id).then(function(){$scope.clinicalDataCollection.refreshSelectedCollection()})},$scope.clinical.edit=function(a){$scope.clinical.dataEdit=_.clone(a)},$scope.clinical.update=function(a){dcbia.updateClinicalData(a).then(function(a){$scope.clinical.showSection=-1,$scope.clinicalDataCollection.select($scope.clinicalDataCollection.selectedCollection)})},$scope.csv={},$scope.$watch("csv.file",function(){$scope.csv.file&&$scope.csv.readFile().then(function(){$scope.$apply()})}),$scope.csv.readFile=function(){return $scope.csv.open($scope.csv.file).then(function(a){var b={};_.each(a,function(a){_.extend(b,a)}),void 0===b.patientId&&($scope.csv.selectPatientId=!0),b=_.keys(b),$scope.csv.selectedCollectionData=a,$scope.csv.selectedCollectionDataKeys=b})},$scope.csv.open=function(a){return new Promise(function(b,c){var d=new FileReader;d.onload=function(a){var c=a.target.result;c.indexOf("\r\n")===-1&&c.indexOf("\r")!==-1&&(c=c.replace(new RegExp("\r","g"),"\n")),b($scope.csv.JSON(c))},d.onerror=function(a){c(a)},d.readAsText(a)})},$scope.csv.camelize=function(a){return a.replace(/(?:^\w|[A-Z]|\b\w)/g,function(a,b){return 0!=b||isNaN(parseInt(a))?0==b?a.toLowerCase():a.toUpperCase():""}).replace(/\s+/g,"").replace(/-/g,"")},$scope.csv.JSON=function(csv){for(var lines=csv.split("\n"),result=[],headers=_.map(lines[0].split(","),function(val){try{return eval(val)}catch(a){return _.isString(val)?$scope.csv.camelize(val):val}}),i=1;i<lines.length;i++){for(var obj={},currentline=_.map(lines[i].split(","),function(val){try{return eval(val)}catch(a){return val}}),j=0;j<headers.length;j++)obj[headers[j]]=currentline[j];result.push(obj)}return result},$scope.csv.create=function(){$scope.csv.selectPatientId&&!$scope.csv.selectedPatientId?alert("Please select a patientId from the available column headers!"):Promise.all(_.map($scope.csv.selectedCollectionData,function(a){var b=_.clone(a);return $scope.csv.selectPatientId&&(b.patientId=a[$scope.csv.selectedPatientId],delete b[$scope.csv.selectedPatientId]),$scope.clinical.createClinicalData(b)})).then(function(a){return _.each(_.pluck(a,"data"),function(a){$scope.clinicalDataCollection.selectedCollection.items.push({_id:a.id})}),$scope.clinicalDataCollection.update($scope.clinicalDataCollection.selectedCollection)}).then(function(a){return delete $scope.csv.selectedCollectionData,delete $scope.csv.selectedCollectionDataKeys,$scope.clinicalDataCollection.select($scope.clinicalDataCollection.selectedCollection)}).catch(console.error)},$scope.csv.export=function(a){var b;b=$scope.clinicalDataCollection.selectedCollection&&a._id===$scope.clinicalDataCollection.selectedCollection._id?Promise.resolve(!0):$scope.clinicalDataCollection.select(a),b.then(function(){var a=$scope.clinicalDataCollection.getDataCollectionKeys($scope.clinicalDataCollection.selectedCollectionData),b=a.toString();b+="\n",_.each($scope.clinicalDataCollection.selectedCollectionData,function(c,d){_.each(a,function(d,e){var f=c[d]?c[d]:"";b+=f,e<a.length-1&&(b+=",")}),d<$scope.clinicalDataCollection.selectedCollectionData.length-1&&(b+="\n")});var c=$scope.clinicalDataCollection.selectedCollection.name;return $scope.clinicalDataCollection.selectedCollection.name.indexOf("csv")===-1&&(c+=".csv"),$scope.csv.download(c,b)})},$scope.csv.download=function(a,b){var c=document.createElement("a"),d=new Blob([b],{type:"text/plain"});c.setAttribute("href",window.URL.createObjectURL(d)),c.setAttribute("download",a),c.dataset.downloadurl=["text/plain",c.download,c.href].join(":"),c.click()}}]);
angular.module("jwt-user-login",[]),angular.module("jwt-user-login").config(["$httpProvider","$provide",function(a,b){b.factory("jwtInterceptor",["$q","$location",function(a,b){return{request:function(a){var b=localStorage.getItem("clusterpost_token");return b&&(a.headers.authorization="Bearer "+b),a},requestError:function(b){return a.reject(b)},response:function(a){return a},responseError:function(c){return 401!==c.status||localStorage.getItem("clusterpost_token")||b.path("/"),404===c.status&&b.path("/notFound"),a.reject(c)}}}]),a.interceptors.push("jwtInterceptor")}]).factory("clusterauth",["$q","$http","$location","$rootScope",function(a,b,c,d){return{createUser:function(a){return b({method:"POST",url:"/auth/user",data:a}).then(function(a){localStorage.setItem("clusterpost_token",a.data.token)})},getUsers:function(){return b({method:"GET",url:"/auth/users"})},getUser:function(){return d.user?Promise.resolve(d.user):b({method:"GET",url:"/auth/user"}).then(function(a){return d.user=a.data,a.data})},deleteUser:function(a){return b({method:"DELETE",url:"/auth/user",data:a})},login:function(a){return b({method:"POST",url:"/auth/login",data:a}).then(function(a){localStorage.setItem("clusterpost_token",a.data.token)})},updatePassword:function(a,c){return b({method:"PUT",url:"/auth/login",data:a,headers:{authorization:"Bearer "+c}}).then(function(a){localStorage.setItem("clusterpost_token",a.data.token)})},sendRecoverPassword:function(a){return b({method:"POST",url:"/auth/reset",data:a})},logout:function(){localStorage.removeItem("clusterpost_token"),c.path("/")},updateUser:function(a){return b({method:"PUT",url:"/auth/users",data:a})}}}]),angular.module("jwt-user-login").directive("userLogin",["$routeParams","$location","$rootScope","clusterauth",function(a,b,c,d){function e(e,f,g){e.showLogin=!0,e.newUser={},e.user={},e.resetUser=!1,a.token&&(e.showLogin=!1,e.resetUser={token:a.token}),e.createUser=function(){e.errorMsg="",d.createUser(e.newUser).then(function(){return d.getUser()}).then(function(a){c.user=a.data,b.path("/home")}).catch(function(a){throw 409===a.status&&(e.errorMsg="An account already exist with this email address. Login with your account or create a new one with a new email address"),a})},e.recoverPassword=function(){return e.errorMsg="",e.user.email?void d.sendRecoverPassword({email:e.user.email}).then(function(a){alert(a.data)}).catch(function(a){401===a.status&&(e.errorMsg="I don't know who you are, you need to create an account first!")}):(alert("No email address specified in email field."),!1)},e.resetPassword=function(){return e.errorMsg="",e.resetUser.password0!==e.resetUser.password1?(alert("Passwords are not the same"),!1):void d.updatePassword({password:e.resetUser.password1},e.resetUser.token).then(function(){return d.getUser()}).then(function(a){c.user=a.data,b.path("/home")}).catch(function(a){throw alert("Password must contains 6 characters including at least one uppercase letter and one number - special characte allowed"),console.error(a),a})},e.login=function(){e.errorMsg="",d.login(e.user).then(function(){return d.getUser()}).then(function(a){c.user=a.data,b.path("/home")}).catch(function(a){throw 401===a.status&&e.user.password&&(e.errorMsg="Wrong identification - check if email and password are corrects"),console.log(a),a})},e.switchForm=function(){e.errorMsg="",e.showLogin=!e.showLogin}}return{restrict:"E",link:e,templateUrl:"./src/jwtUserLogin.template.html"}}]),angular.module("jwt-user-login").run(["$templateCache",function(a){"use strict";a.put("./src/jwtUserLogin.template.html",'<div class="ng-col-12 se-slope" >\n  <div class="row">\n    <div ng-if="showLogin && !resetUser" class="containerLogin">\n      <form class="form-login">\n        <h2 class="form-login-heading">Please login</h2>\n        <label for="inputEmail" class="sr-only">Email address</label>\n        <input id="inputEmail" class="form-control" placeholder="Email address" required="" autofocus="" type="email" ng-model="user.email">\n        <label for="inputPassword" class="sr-only">Password</label>\n        <input id="inputPassword" class="form-control" placeholder="Password" required type="password" ng-model="user.password" pattern="(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}" title="Must contain at least one number and one uppercase and lowercase letter, and at least 6 or more characters">\n\n        <div style="color:red;"> {{errorMsg}}</div>\n\n        <button class="btn btn-lg btn-primary btn-block" type="submit" ng-click="login()">Login</button>\n        <div class="etc-login-form">\n    \t\t\t<p>forgot your password? <a href="" ng-click="recoverPassword()">click here</a></p>\n    \t\t\t<p>new user? <a href="" ng-click="switchForm()">create new account</a></p>\n    \t\t</div>\n      </form>\n    </div>\n\n    <div ng-if="!showLogin && !resetUser" class="containerLogin">\n      <form class="form-login">\n        <h2 class="form-login-heading">Create an account</h2>\n        <label for="inputName" class="sr-only">User Name</label>\n        <input id="inputName" class="form-control" placeholder="User name" required="" autofocus="" type="text" ng-model="newUser.name">\n        <label for="inputEmail" class="sr-only">Email address</label>\n        <input id="inputEmail" class="form-control" placeholder="Email address" required="" autofocus="" type="email" ng-model="newUser.email">\n        <label for="inputPassword" class="sr-only" >Password</label> \n        <input id="inputPassword" class="form-control" placeholder="Password" required="" type="password" ng-model="newUser.password" pattern="(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}" title="Must contain at least one number and one uppercase and lowercase letter, and at least 6 or more characters"> <a href="" data-toggle="tooltip" title="Password must contain at least one number and one uppercase and lowercase letter, and at least 6 or more characters"> Help <i class="glyphicon glyphicon-info-sign"> </i> </a>\n\n        <div style="color:red;"> {{errorMsg}}</div>\n\n        <button class="btn btn-lg btn-primary btn-block" type="submit" ng-click="createUser()">Create and Login</button>\n        <div class="etc-login-form">\n          <p>existing user? <a href="" ng-click="switchForm()">Login with your account</a></p>\n        </div>\n      </form>\n    </div>\n\n    <div ng-if="resetUser" class="containerLogin">\n      <form class="form-rest-password" >\n        <h2 class="form-login-heading">Reset your password</h2>\n        <label for="inputPassword0" class="sr-only">Password</label>\n        <input id="inputPassword0" class="form-control" placeholder="Password" required="" type="password" ng-model="resetUser.password0" autocomplete="off">\n        <label for="inputPassword1" class="sr-only">Confirm Password</label>\n        <input id="inputPassword1" class="form-control" placeholder="Confirm assword" required="" type="password" ng-model="resetUser.password1" autocomplete="off">\n        <button class="btn btn-lg btn-primary btn-block" type="submit" ng-click="resetPassword()">Reset and Login</button>\n\n        <p> <a href="#/welcome">Login page</a> </p>\n      </form>\n    </div>\n  </div>\n</div>')}]);